package com.example.EdgarDealStore.entity;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table(name="ABS_POOL")
public class ABSPool {

	@Id
	@Column
	private BigDecimal POOL_ID;
	
	@Column
	private BigDecimal DEAL_ID;
	
	@Column
	private BigDecimal ITYP_ID;
	
	@Column
	private String POOL_CODE;
	
	@Column
	private BigDecimal POOL_WAM;
	
	@Column
	private BigDecimal POOL_ORIG_WARM;
	
	@Column
	private BigDecimal POOL_CURR_WARM;
	
	@Column
	private BigDecimal POOL_ORIG_WAC;
	
	@Column
	private BigDecimal POOL_CURR_WAC;
	
	@Column
	private BigDecimal POOL_ORIG_BALANCE;
	
	@Column
	private BigDecimal POOL_TERMINAL_VALUE;
	
	@Column
	private BigDecimal POOL_ORIG_LOAN_COUNT;
	
	@Column
	private BigDecimal POOL_MARKOV_CHAIN_CURE_RATE = new BigDecimal("0.0025");

	@Column
	private BigDecimal POOL_MARKOV_CHAIN_60_BKF_RATE = new BigDecimal("0.34");
	
	@Column
	private BigDecimal POOL_MARKOV_CHAIN_90_BKF_RATE = new BigDecimal("0.3");
	
	@Column
	private BigDecimal POOL_MARKOV_CHAIN_120_BKF_RATE = new BigDecimal("0.3");
	
	@Column
	private BigDecimal POOL_CONTRACT_DEF_ROLL_RATE = new BigDecimal("0.05");
	
	@Column
	private BigDecimal POOL_BANKRUPT_ROLL_RATE = new BigDecimal("0.00001");
	
	@Column
	private BigDecimal POOL_LOSS_CURVE_MULTIPLIER = new BigDecimal("1");
	
	@Column
	private BigDecimal POOL_LOSS_CURVE_TIME_CONSTANT = new BigDecimal("0.1");
	
	@Column
	private BigDecimal POOL_TARGET_GROSS_EXPECT_LOSS = new BigDecimal("0.1");
	
	@Column
	private BigDecimal POOL_CURR_PREPAY_MULTIPLIER = new BigDecimal("1");
	
	@Column
	private BigDecimal POOL_CURR_ASYMPTOTE = new BigDecimal("1");
	
	@Column
	private BigDecimal POOL_PEAK_LOSS_MONTH = new BigDecimal("22");
	
	@Column
	private BigDecimal POOL_MAF = new BigDecimal("1.5");
	
	@Column
	private BigDecimal POOL_DEFAULT_SPAN = new BigDecimal("51");
	
	@Column
	private BigDecimal POOL_RECOVERY_PCT = new BigDecimal("0.6");
	
	@Column
	private BigDecimal POOL_RECOVERY_DELAY = new BigDecimal("2");

	@Column
	private BigDecimal POOL_COEF_OF_VARIATION = new BigDecimal("1");
	
	@Column
	private String POOL_IS_SWAP = "N";
	
	@Column
	private BigDecimal POOL_SWAP_RATE = new BigDecimal("0");
	
	@Column
	private String MRAT_LETTER_GRADE_SWAP_CNTRPTY;
	
	@Column
	private String POOL_IS_PREPAY_PENALTY;
	
	@Column
	private BigDecimal POOL_PREPAY_PENALTY_ALLOC_PCT;
	
	@Column
	private BigDecimal SWAP_ID;
	
	@Column
	private BigDecimal POOL_DELIN_START;
	
	@Column
	private BigDecimal POOL_DELIN_END;
	
	@Column
	private BigDecimal POOL_PREPAY_PENALTY_YR_DECLINE;
	
	@Column
	private Timestamp POOL_PREPAY_PENALTY_LOCKOUT_DT;
	
	@Column
	private Timestamp POOL_PREPAY_PENALTY_TERM_DTE;
	
	@Column
	private BigDecimal POOL_PREPAY_PENALTY_RATE;
	
	@Column
	private BigDecimal POOL_SINGLE_MONTH_MORTALITY;
	
	@Column
	private BigDecimal POOL_ABSNET_START;
	
	@Column
	private BigDecimal POOL_ABSNET_END;
	
	@Column
	private String POOL_IS_PREFUNDING;
	
	@Column
	private BigDecimal POOL_PF_INTIAL_AMOUNT;
	
	@Column
	private Timestamp POOL_PF_END_DATE;
	
	@Column
	private BigDecimal POOL_PF_ESTIMATED_WAC;
	
	@Column
	private String POOL_RELEVANT_LIBOR_MATURITY = "1MLI";
	
	@Column
	private BigDecimal POOL_INDEX = new BigDecimal("1");
	
	@Column
	private BigDecimal NB_TRANCHES;
	
	@Column
	private String IS_SPDACT;
	
	@Column
	private BigDecimal SPDACT_TARGET_PCT;
	
	@Column
	private BigDecimal SPDACT_INITIAL_DEPOSIT;
	
	@Column
	private BigDecimal SPDACT_CURR_BALANCE;
	
	@Column
	private String POOL_MPSHARE;
	
	@Column
	private BigDecimal COMBINED_LTV;
	
	@Column
	private BigDecimal FIRST_LIENS_PCT;
	
	@Column
	private BigDecimal SECOND_LIENS_PCT;
	
	@Column
	private BigDecimal FIXED_RATE_PCT;
	
	@Column
	private BigDecimal OCCUPIED_HOUSES_PCT;
	
	@Column
	private BigDecimal FULL_DOC_PCT;
	
	@Column
	private BigDecimal STATED_INCOME_PCT;
	
	@Column
	private BigDecimal WAFS;
	
	@Column
	private BigDecimal DETACHED_HOUSES_PCT;
	
	@Column
	private BigDecimal INVEST_PROPERTIES_PCT;
	
	@Column
	private BigDecimal NONFULLY_AMTZ_PCT;
	
	@Column
	private String COLLATERAL_SUB_TYPE;
	
	@Column
	private String WRITEDOWN_MECHANICS;
	
	@Column
	private String WRITEUP_INTEREST_MECHANICS;
	
	@Column
	private String WRITEUP_PRINCIPAL_MECHANICS;
	
	@Column
	private BigDecimal POOL_FLOATING_LOANS_PCT;
	
	@Column
	private String SUBROGATION;
	
	@Column
	private BigDecimal SUBROG_MAX_PCT;
	
	@Column
	private String SUBROG_MAX_PCT_BASE;
	
	@Column
	private BigDecimal SUBROG_REC_PCT;
	
	@Column
	private BigDecimal PPMT_PENALTY_SCHED_TYP;
	
	@Column
	private BigDecimal PPMT_PENALTY_ALLOC_TYP;
	
	@Column
	private String NORMAL_MODE;
	
	@Column
	private String SIMPLE_SUBROGATION;
	
	@Column
	private String DCM_BYPASS;
	
	@Column
	private BigDecimal DCM_NF_BEGINNING;
	
	@Column
	private BigDecimal DCM_NF_END;
	
	@Column
	private BigDecimal BROKER_CPR_ORIGINAL;

	public BigDecimal getPOOL_ID() {
		return POOL_ID;
	}

	public void setPOOL_ID(BigDecimal pOOL_ID) {
		POOL_ID = pOOL_ID;
	}

	public BigDecimal getDEAL_ID() {
		return DEAL_ID;
	}

	public void setDEAL_ID(BigDecimal dEAL_ID) {
		DEAL_ID = dEAL_ID;
	}

	public BigDecimal getITYP_ID() {
		return ITYP_ID;
	}

	public void setITYP_ID(BigDecimal iTYP_ID) {
		ITYP_ID = iTYP_ID;
	}

	public String getPOOL_CODE() {
		return POOL_CODE;
	}

	public void setPOOL_CODE(String pOOL_CODE) {
		POOL_CODE = pOOL_CODE;
	}

	public BigDecimal getPOOL_WAM() {
		return POOL_WAM;
	}

	public void setPOOL_WAM(BigDecimal pOOL_WAM) {
		POOL_WAM = pOOL_WAM;
	}

	public BigDecimal getPOOL_ORIG_WARM() {
		return POOL_ORIG_WARM;
	}

	public void setPOOL_ORIG_WARM(BigDecimal pOOL_ORIG_WARM) {
		POOL_ORIG_WARM = pOOL_ORIG_WARM;
	}

	public BigDecimal getPOOL_CURR_WARM() {
		return POOL_CURR_WARM;
	}

	public void setPOOL_CURR_WARM(BigDecimal pOOL_CURR_WARM) {
		POOL_CURR_WARM = pOOL_CURR_WARM;
	}

	public BigDecimal getPOOL_ORIG_WAC() {
		return POOL_ORIG_WAC;
	}

	public void setPOOL_ORIG_WAC(BigDecimal pOOL_ORIG_WAC) {
		POOL_ORIG_WAC = pOOL_ORIG_WAC;
	}

	public BigDecimal getPOOL_CURR_WAC() {
		return POOL_CURR_WAC;
	}

	public void setPOOL_CURR_WAC(BigDecimal pOOL_CURR_WAC) {
		POOL_CURR_WAC = pOOL_CURR_WAC;
	}

	public BigDecimal getPOOL_ORIG_BALANCE() {
		return POOL_ORIG_BALANCE;
	}

	public void setPOOL_ORIG_BALANCE(BigDecimal pOOL_ORIG_BALANCE) {
		POOL_ORIG_BALANCE = pOOL_ORIG_BALANCE;
	}

	public BigDecimal getPOOL_TERMINAL_VALUE() {
		return POOL_TERMINAL_VALUE;
	}

	public void setPOOL_TERMINAL_VALUE(BigDecimal pOOL_TERMINAL_VALUE) {
		POOL_TERMINAL_VALUE = pOOL_TERMINAL_VALUE;
	}

	public BigDecimal getPOOL_ORIG_LOAN_COUNT() {
		return POOL_ORIG_LOAN_COUNT;
	}

	public void setPOOL_ORIG_LOAN_COUNT(BigDecimal pOOL_ORIG_LOAN_COUNT) {
		POOL_ORIG_LOAN_COUNT = pOOL_ORIG_LOAN_COUNT;
	}

	public BigDecimal getPOOL_MARKOV_CHAIN_CURE_RATE() {
		return POOL_MARKOV_CHAIN_CURE_RATE;
	}

	public void setPOOL_MARKOV_CHAIN_CURE_RATE(BigDecimal pOOL_MARKOV_CHAIN_CURE_RATE) {
		POOL_MARKOV_CHAIN_CURE_RATE = pOOL_MARKOV_CHAIN_CURE_RATE;
	}

	public BigDecimal getPOOL_MARKOV_CHAIN_60_BKF_RATE() {
		return POOL_MARKOV_CHAIN_60_BKF_RATE;
	}

	public void setPOOL_MARKOV_CHAIN_60_BKF_RATE(BigDecimal pOOL_MARKOV_CHAIN_60_BKF_RATE) {
		POOL_MARKOV_CHAIN_60_BKF_RATE = pOOL_MARKOV_CHAIN_60_BKF_RATE;
	}

	public BigDecimal getPOOL_MARKOV_CHAIN_90_BKF_RATE() {
		return POOL_MARKOV_CHAIN_90_BKF_RATE;
	}

	public void setPOOL_MARKOV_CHAIN_90_BKF_RATE(BigDecimal pOOL_MARKOV_CHAIN_90_BKF_RATE) {
		POOL_MARKOV_CHAIN_90_BKF_RATE = pOOL_MARKOV_CHAIN_90_BKF_RATE;
	}

	public BigDecimal getPOOL_MARKOV_CHAIN_120_BKF_RATE() {
		return POOL_MARKOV_CHAIN_120_BKF_RATE;
	}

	public void setPOOL_MARKOV_CHAIN_120_BKF_RATE(BigDecimal pOOL_MARKOV_CHAIN_120_BKF_RATE) {
		POOL_MARKOV_CHAIN_120_BKF_RATE = pOOL_MARKOV_CHAIN_120_BKF_RATE;
	}

	public BigDecimal getPOOL_CONTRACT_DEF_ROLL_RATE() {
		return POOL_CONTRACT_DEF_ROLL_RATE;
	}

	public void setPOOL_CONTRACT_DEF_ROLL_RATE(BigDecimal pOOL_CONTRACT_DEF_ROLL_RATE) {
		POOL_CONTRACT_DEF_ROLL_RATE = pOOL_CONTRACT_DEF_ROLL_RATE;
	}

	public BigDecimal getPOOL_BANKRUPT_ROLL_RATE() {
		return POOL_BANKRUPT_ROLL_RATE;
	}

	public void setPOOL_BANKRUPT_ROLL_RATE(BigDecimal pOOL_BANKRUPT_ROLL_RATE) {
		POOL_BANKRUPT_ROLL_RATE = pOOL_BANKRUPT_ROLL_RATE;
	}

	public BigDecimal getPOOL_LOSS_CURVE_MULTIPLIER() {
		return POOL_LOSS_CURVE_MULTIPLIER;
	}

	public void setPOOL_LOSS_CURVE_MULTIPLIER(BigDecimal pOOL_LOSS_CURVE_MULTIPLIER) {
		POOL_LOSS_CURVE_MULTIPLIER = pOOL_LOSS_CURVE_MULTIPLIER;
	}

	public BigDecimal getPOOL_LOSS_CURVE_TIME_CONSTANT() {
		return POOL_LOSS_CURVE_TIME_CONSTANT;
	}

	public void setPOOL_LOSS_CURVE_TIME_CONSTANT(BigDecimal pOOL_LOSS_CURVE_TIME_CONSTANT) {
		POOL_LOSS_CURVE_TIME_CONSTANT = pOOL_LOSS_CURVE_TIME_CONSTANT;
	}

	public BigDecimal getPOOL_TARGET_GROSS_EXPECT_LOSS() {
		return POOL_TARGET_GROSS_EXPECT_LOSS;
	}

	public void setPOOL_TARGET_GROSS_EXPECT_LOSS(BigDecimal pOOL_TARGET_GROSS_EXPECT_LOSS) {
		POOL_TARGET_GROSS_EXPECT_LOSS = pOOL_TARGET_GROSS_EXPECT_LOSS;
	}

	public BigDecimal getPOOL_CURR_PREPAY_MULTIPLIER() {
		return POOL_CURR_PREPAY_MULTIPLIER;
	}

	public void setPOOL_CURR_PREPAY_MULTIPLIER(BigDecimal pOOL_CURR_PREPAY_MULTIPLIER) {
		POOL_CURR_PREPAY_MULTIPLIER = pOOL_CURR_PREPAY_MULTIPLIER;
	}

	public BigDecimal getPOOL_CURR_ASYMPTOTE() {
		return POOL_CURR_ASYMPTOTE;
	}

	public void setPOOL_CURR_ASYMPTOTE(BigDecimal pOOL_CURR_ASYMPTOTE) {
		POOL_CURR_ASYMPTOTE = pOOL_CURR_ASYMPTOTE;
	}

	public BigDecimal getPOOL_PEAK_LOSS_MONTH() {
		return POOL_PEAK_LOSS_MONTH;
	}

	public void setPOOL_PEAK_LOSS_MONTH(BigDecimal pOOL_PEAK_LOSS_MONTH) {
		POOL_PEAK_LOSS_MONTH = pOOL_PEAK_LOSS_MONTH;
	}

	public BigDecimal getPOOL_MAF() {
		return POOL_MAF;
	}

	public void setPOOL_MAF(BigDecimal pOOL_MAF) {
		POOL_MAF = pOOL_MAF;
	}

	public BigDecimal getPOOL_DEFAULT_SPAN() {
		return POOL_DEFAULT_SPAN;
	}

	public void setPOOL_DEFAULT_SPAN(BigDecimal pOOL_DEFAULT_SPAN) {
		POOL_DEFAULT_SPAN = pOOL_DEFAULT_SPAN;
	}

	public BigDecimal getPOOL_RECOVERY_PCT() {
		return POOL_RECOVERY_PCT;
	}

	public void setPOOL_RECOVERY_PCT(BigDecimal pOOL_RECOVERY_PCT) {
		POOL_RECOVERY_PCT = pOOL_RECOVERY_PCT;
	}

	public BigDecimal getPOOL_RECOVERY_DELAY() {
		return POOL_RECOVERY_DELAY;
	}

	public void setPOOL_RECOVERY_DELAY(BigDecimal pOOL_RECOVERY_DELAY) {
		POOL_RECOVERY_DELAY = pOOL_RECOVERY_DELAY;
	}

	public BigDecimal getPOOL_COEF_OF_VARIATION() {
		return POOL_COEF_OF_VARIATION;
	}

	public void setPOOL_COEF_OF_VARIATION(BigDecimal pOOL_COEF_OF_VARIATION) {
		POOL_COEF_OF_VARIATION = pOOL_COEF_OF_VARIATION;
	}

	public String getPOOL_IS_SWAP() {
		return POOL_IS_SWAP;
	}

	public void setPOOL_IS_SWAP(String pOOL_IS_SWAP) {
		POOL_IS_SWAP = pOOL_IS_SWAP;
	}

	public BigDecimal getPOOL_SWAP_RATE() {
		return POOL_SWAP_RATE;
	}

	public void setPOOL_SWAP_RATE(BigDecimal pOOL_SWAP_RATE) {
		POOL_SWAP_RATE = pOOL_SWAP_RATE;
	}

	public String getMRAT_LETTER_GRADE_SWAP_CNTRPTY() {
		return MRAT_LETTER_GRADE_SWAP_CNTRPTY;
	}

	public void setMRAT_LETTER_GRADE_SWAP_CNTRPTY(String mRAT_LETTER_GRADE_SWAP_CNTRPTY) {
		MRAT_LETTER_GRADE_SWAP_CNTRPTY = mRAT_LETTER_GRADE_SWAP_CNTRPTY;
	}

	public String getPOOL_IS_PREPAY_PENALTY() {
		return POOL_IS_PREPAY_PENALTY;
	}

	public void setPOOL_IS_PREPAY_PENALTY(String pOOL_IS_PREPAY_PENALTY) {
		POOL_IS_PREPAY_PENALTY = pOOL_IS_PREPAY_PENALTY;
	}

	public BigDecimal getPOOL_PREPAY_PENALTY_ALLOC_PCT() {
		return POOL_PREPAY_PENALTY_ALLOC_PCT;
	}

	public void setPOOL_PREPAY_PENALTY_ALLOC_PCT(BigDecimal pOOL_PREPAY_PENALTY_ALLOC_PCT) {
		POOL_PREPAY_PENALTY_ALLOC_PCT = pOOL_PREPAY_PENALTY_ALLOC_PCT;
	}

	public BigDecimal getSWAP_ID() {
		return SWAP_ID;
	}

	public void setSWAP_ID(BigDecimal sWAP_ID) {
		SWAP_ID = sWAP_ID;
	}

	public BigDecimal getPOOL_DELIN_START() {
		return POOL_DELIN_START;
	}

	public void setPOOL_DELIN_START(BigDecimal pOOL_DELIN_START) {
		POOL_DELIN_START = pOOL_DELIN_START;
	}

	public BigDecimal getPOOL_DELIN_END() {
		return POOL_DELIN_END;
	}

	public void setPOOL_DELIN_END(BigDecimal pOOL_DELIN_END) {
		POOL_DELIN_END = pOOL_DELIN_END;
	}

	public BigDecimal getPOOL_PREPAY_PENALTY_YR_DECLINE() {
		return POOL_PREPAY_PENALTY_YR_DECLINE;
	}

	public void setPOOL_PREPAY_PENALTY_YR_DECLINE(BigDecimal pOOL_PREPAY_PENALTY_YR_DECLINE) {
		POOL_PREPAY_PENALTY_YR_DECLINE = pOOL_PREPAY_PENALTY_YR_DECLINE;
	}

	public Timestamp getPOOL_PREPAY_PENALTY_LOCKOUT_DT() {
		return POOL_PREPAY_PENALTY_LOCKOUT_DT;
	}

	public void setPOOL_PREPAY_PENALTY_LOCKOUT_DT(Timestamp pOOL_PREPAY_PENALTY_LOCKOUT_DT) {
		POOL_PREPAY_PENALTY_LOCKOUT_DT = pOOL_PREPAY_PENALTY_LOCKOUT_DT;
	}

	public Timestamp getPOOL_PREPAY_PENALTY_TERM_DTE() {
		return POOL_PREPAY_PENALTY_TERM_DTE;
	}

	public void setPOOL_PREPAY_PENALTY_TERM_DTE(Timestamp pOOL_PREPAY_PENALTY_TERM_DTE) {
		POOL_PREPAY_PENALTY_TERM_DTE = pOOL_PREPAY_PENALTY_TERM_DTE;
	}

	public BigDecimal getPOOL_PREPAY_PENALTY_RATE() {
		return POOL_PREPAY_PENALTY_RATE;
	}

	public void setPOOL_PREPAY_PENALTY_RATE(BigDecimal pOOL_PREPAY_PENALTY_RATE) {
		POOL_PREPAY_PENALTY_RATE = pOOL_PREPAY_PENALTY_RATE;
	}

	public BigDecimal getPOOL_SINGLE_MONTH_MORTALITY() {
		return POOL_SINGLE_MONTH_MORTALITY;
	}

	public void setPOOL_SINGLE_MONTH_MORTALITY(BigDecimal pOOL_SINGLE_MONTH_MORTALITY) {
		POOL_SINGLE_MONTH_MORTALITY = pOOL_SINGLE_MONTH_MORTALITY;
	}

	public BigDecimal getPOOL_ABSNET_START() {
		return POOL_ABSNET_START;
	}

	public void setPOOL_ABSNET_START(BigDecimal pOOL_ABSNET_START) {
		POOL_ABSNET_START = pOOL_ABSNET_START;
	}

	public BigDecimal getPOOL_ABSNET_END() {
		return POOL_ABSNET_END;
	}

	public void setPOOL_ABSNET_END(BigDecimal pOOL_ABSNET_END) {
		POOL_ABSNET_END = pOOL_ABSNET_END;
	}

	public String getPOOL_IS_PREFUNDING() {
		return POOL_IS_PREFUNDING;
	}

	public void setPOOL_IS_PREFUNDING(String pOOL_IS_PREFUNDING) {
		POOL_IS_PREFUNDING = pOOL_IS_PREFUNDING;
	}

	public BigDecimal getPOOL_PF_INTIAL_AMOUNT() {
		return POOL_PF_INTIAL_AMOUNT;
	}

	public void setPOOL_PF_INTIAL_AMOUNT(BigDecimal pOOL_PF_INTIAL_AMOUNT) {
		POOL_PF_INTIAL_AMOUNT = pOOL_PF_INTIAL_AMOUNT;
	}

	public Timestamp getPOOL_PF_END_DATE() {
		return POOL_PF_END_DATE;
	}

	public void setPOOL_PF_END_DATE(Timestamp pOOL_PF_END_DATE) {
		POOL_PF_END_DATE = pOOL_PF_END_DATE;
	}

	public BigDecimal getPOOL_PF_ESTIMATED_WAC() {
		return POOL_PF_ESTIMATED_WAC;
	}

	public void setPOOL_PF_ESTIMATED_WAC(BigDecimal pOOL_PF_ESTIMATED_WAC) {
		POOL_PF_ESTIMATED_WAC = pOOL_PF_ESTIMATED_WAC;
	}

	public String getPOOL_RELEVANT_LIBOR_MATURITY() {
		return POOL_RELEVANT_LIBOR_MATURITY;
	}

	public void setPOOL_RELEVANT_LIBOR_MATURITY(String pOOL_RELEVANT_LIBOR_MATURITY) {
		POOL_RELEVANT_LIBOR_MATURITY = pOOL_RELEVANT_LIBOR_MATURITY;
	}

	public BigDecimal getPOOL_INDEX() {
		return POOL_INDEX;
	}

	public void setPOOL_INDEX(BigDecimal pOOL_INDEX) {
		POOL_INDEX = pOOL_INDEX;
	}

	public BigDecimal getNB_TRANCHES() {
		return NB_TRANCHES;
	}

	public void setNB_TRANCHES(BigDecimal nB_TRANCHES) {
		NB_TRANCHES = nB_TRANCHES;
	}

	public String getIS_SPDACT() {
		return IS_SPDACT;
	}

	public void setIS_SPDACT(String iS_SPDACT) {
		IS_SPDACT = iS_SPDACT;
	}

	public BigDecimal getSPDACT_TARGET_PCT() {
		return SPDACT_TARGET_PCT;
	}

	public void setSPDACT_TARGET_PCT(BigDecimal sPDACT_TARGET_PCT) {
		SPDACT_TARGET_PCT = sPDACT_TARGET_PCT;
	}

	public BigDecimal getSPDACT_INITIAL_DEPOSIT() {
		return SPDACT_INITIAL_DEPOSIT;
	}

	public void setSPDACT_INITIAL_DEPOSIT(BigDecimal sPDACT_INITIAL_DEPOSIT) {
		SPDACT_INITIAL_DEPOSIT = sPDACT_INITIAL_DEPOSIT;
	}

	public BigDecimal getSPDACT_CURR_BALANCE() {
		return SPDACT_CURR_BALANCE;
	}

	public void setSPDACT_CURR_BALANCE(BigDecimal sPDACT_CURR_BALANCE) {
		SPDACT_CURR_BALANCE = sPDACT_CURR_BALANCE;
	}

	public String getPOOL_MPSHARE() {
		return POOL_MPSHARE;
	}

	public void setPOOL_MPSHARE(String pOOL_MPSHARE) {
		POOL_MPSHARE = pOOL_MPSHARE;
	}

	public BigDecimal getCOMBINED_LTV() {
		return COMBINED_LTV;
	}

	public void setCOMBINED_LTV(BigDecimal cOMBINED_LTV) {
		COMBINED_LTV = cOMBINED_LTV;
	}

	public BigDecimal getFIRST_LIENS_PCT() {
		return FIRST_LIENS_PCT;
	}

	public void setFIRST_LIENS_PCT(BigDecimal fIRST_LIENS_PCT) {
		FIRST_LIENS_PCT = fIRST_LIENS_PCT;
	}

	public BigDecimal getSECOND_LIENS_PCT() {
		return SECOND_LIENS_PCT;
	}

	public void setSECOND_LIENS_PCT(BigDecimal sECOND_LIENS_PCT) {
		SECOND_LIENS_PCT = sECOND_LIENS_PCT;
	}

	public BigDecimal getFIXED_RATE_PCT() {
		return FIXED_RATE_PCT;
	}

	public void setFIXED_RATE_PCT(BigDecimal fIXED_RATE_PCT) {
		FIXED_RATE_PCT = fIXED_RATE_PCT;
	}

	public BigDecimal getOCCUPIED_HOUSES_PCT() {
		return OCCUPIED_HOUSES_PCT;
	}

	public void setOCCUPIED_HOUSES_PCT(BigDecimal oCCUPIED_HOUSES_PCT) {
		OCCUPIED_HOUSES_PCT = oCCUPIED_HOUSES_PCT;
	}

	public BigDecimal getFULL_DOC_PCT() {
		return FULL_DOC_PCT;
	}

	public void setFULL_DOC_PCT(BigDecimal fULL_DOC_PCT) {
		FULL_DOC_PCT = fULL_DOC_PCT;
	}

	public BigDecimal getSTATED_INCOME_PCT() {
		return STATED_INCOME_PCT;
	}

	public void setSTATED_INCOME_PCT(BigDecimal sTATED_INCOME_PCT) {
		STATED_INCOME_PCT = sTATED_INCOME_PCT;
	}

	public BigDecimal getWAFS() {
		return WAFS;
	}

	public void setWAFS(BigDecimal wAFS) {
		WAFS = wAFS;
	}

	public BigDecimal getDETACHED_HOUSES_PCT() {
		return DETACHED_HOUSES_PCT;
	}

	public void setDETACHED_HOUSES_PCT(BigDecimal dETACHED_HOUSES_PCT) {
		DETACHED_HOUSES_PCT = dETACHED_HOUSES_PCT;
	}

	public BigDecimal getINVEST_PROPERTIES_PCT() {
		return INVEST_PROPERTIES_PCT;
	}

	public void setINVEST_PROPERTIES_PCT(BigDecimal iNVEST_PROPERTIES_PCT) {
		INVEST_PROPERTIES_PCT = iNVEST_PROPERTIES_PCT;
	}

	public BigDecimal getNONFULLY_AMTZ_PCT() {
		return NONFULLY_AMTZ_PCT;
	}

	public void setNONFULLY_AMTZ_PCT(BigDecimal nONFULLY_AMTZ_PCT) {
		NONFULLY_AMTZ_PCT = nONFULLY_AMTZ_PCT;
	}

	public String getCOLLATERAL_SUB_TYPE() {
		return COLLATERAL_SUB_TYPE;
	}

	public void setCOLLATERAL_SUB_TYPE(String cOLLATERAL_SUB_TYPE) {
		COLLATERAL_SUB_TYPE = cOLLATERAL_SUB_TYPE;
	}

	public String getWRITEDOWN_MECHANICS() {
		return WRITEDOWN_MECHANICS;
	}

	public void setWRITEDOWN_MECHANICS(String wRITEDOWN_MECHANICS) {
		WRITEDOWN_MECHANICS = wRITEDOWN_MECHANICS;
	}

	public String getWRITEUP_INTEREST_MECHANICS() {
		return WRITEUP_INTEREST_MECHANICS;
	}

	public void setWRITEUP_INTEREST_MECHANICS(String wRITEUP_INTEREST_MECHANICS) {
		WRITEUP_INTEREST_MECHANICS = wRITEUP_INTEREST_MECHANICS;
	}

	public String getWRITEUP_PRINCIPAL_MECHANICS() {
		return WRITEUP_PRINCIPAL_MECHANICS;
	}

	public void setWRITEUP_PRINCIPAL_MECHANICS(String wRITEUP_PRINCIPAL_MECHANICS) {
		WRITEUP_PRINCIPAL_MECHANICS = wRITEUP_PRINCIPAL_MECHANICS;
	}

	public BigDecimal getPOOL_FLOATING_LOANS_PCT() {
		return POOL_FLOATING_LOANS_PCT;
	}

	public void setPOOL_FLOATING_LOANS_PCT(BigDecimal pOOL_FLOATING_LOANS_PCT) {
		POOL_FLOATING_LOANS_PCT = pOOL_FLOATING_LOANS_PCT;
	}

	public String getSUBROGATION() {
		return SUBROGATION;
	}

	public void setSUBROGATION(String sUBROGATION) {
		SUBROGATION = sUBROGATION;
	}

	public BigDecimal getSUBROG_MAX_PCT() {
		return SUBROG_MAX_PCT;
	}

	public void setSUBROG_MAX_PCT(BigDecimal sUBROG_MAX_PCT) {
		SUBROG_MAX_PCT = sUBROG_MAX_PCT;
	}

	public String getSUBROG_MAX_PCT_BASE() {
		return SUBROG_MAX_PCT_BASE;
	}

	public void setSUBROG_MAX_PCT_BASE(String sUBROG_MAX_PCT_BASE) {
		SUBROG_MAX_PCT_BASE = sUBROG_MAX_PCT_BASE;
	}

	public BigDecimal getSUBROG_REC_PCT() {
		return SUBROG_REC_PCT;
	}

	public void setSUBROG_REC_PCT(BigDecimal sUBROG_REC_PCT) {
		SUBROG_REC_PCT = sUBROG_REC_PCT;
	}

	public BigDecimal getPPMT_PENALTY_SCHED_TYP() {
		return PPMT_PENALTY_SCHED_TYP;
	}

	public void setPPMT_PENALTY_SCHED_TYP(BigDecimal pPMT_PENALTY_SCHED_TYP) {
		PPMT_PENALTY_SCHED_TYP = pPMT_PENALTY_SCHED_TYP;
	}

	public BigDecimal getPPMT_PENALTY_ALLOC_TYP() {
		return PPMT_PENALTY_ALLOC_TYP;
	}

	public void setPPMT_PENALTY_ALLOC_TYP(BigDecimal pPMT_PENALTY_ALLOC_TYP) {
		PPMT_PENALTY_ALLOC_TYP = pPMT_PENALTY_ALLOC_TYP;
	}

	public String getNORMAL_MODE() {
		return NORMAL_MODE;
	}

	public void setNORMAL_MODE(String nORMAL_MODE) {
		NORMAL_MODE = nORMAL_MODE;
	}

	public String getSIMPLE_SUBROGATION() {
		return SIMPLE_SUBROGATION;
	}

	public void setSIMPLE_SUBROGATION(String sIMPLE_SUBROGATION) {
		SIMPLE_SUBROGATION = sIMPLE_SUBROGATION;
	}

	public String getDCM_BYPASS() {
		return DCM_BYPASS;
	}

	public void setDCM_BYPASS(String dCM_BYPASS) {
		DCM_BYPASS = dCM_BYPASS;
	}

	public BigDecimal getDCM_NF_BEGINNING() {
		return DCM_NF_BEGINNING;
	}

	public void setDCM_NF_BEGINNING(BigDecimal dCM_NF_BEGINNING) {
		DCM_NF_BEGINNING = dCM_NF_BEGINNING;
	}

	public BigDecimal getDCM_NF_END() {
		return DCM_NF_END;
	}

	public void setDCM_NF_END(BigDecimal dCM_NF_END) {
		DCM_NF_END = dCM_NF_END;
	}

	public BigDecimal getBROKER_CPR_ORIGINAL() {
		return BROKER_CPR_ORIGINAL;
	}

	public void setBROKER_CPR_ORIGINAL(BigDecimal bROKER_CPR_ORIGINAL) {
		BROKER_CPR_ORIGINAL = bROKER_CPR_ORIGINAL;
	}

	@Override
	public String toString() {
		return "ABSPool [POOL_ID=" + POOL_ID + ", DEAL_ID=" + DEAL_ID + ", ITYP_ID=" + ITYP_ID + ", POOL_CODE="
				+ POOL_CODE + ", POOL_WAM=" + POOL_WAM + ", POOL_ORIG_WARM=" + POOL_ORIG_WARM + ", POOL_CURR_WARM="
				+ POOL_CURR_WARM + ", POOL_ORIG_WAC=" + POOL_ORIG_WAC + ", POOL_CURR_WAC=" + POOL_CURR_WAC
				+ ", POOL_ORIG_BALANCE=" + POOL_ORIG_BALANCE + ", POOL_TERMINAL_VALUE=" + POOL_TERMINAL_VALUE
				+ ", POOL_ORIG_LOAN_COUNT=" + POOL_ORIG_LOAN_COUNT + ", POOL_MARKOV_CHAIN_CURE_RATE="
				+ POOL_MARKOV_CHAIN_CURE_RATE + ", POOL_MARKOV_CHAIN_60_BKF_RATE=" + POOL_MARKOV_CHAIN_60_BKF_RATE
				+ ", POOL_MARKOV_CHAIN_90_BKF_RATE=" + POOL_MARKOV_CHAIN_90_BKF_RATE
				+ ", POOL_MARKOV_CHAIN_120_BKF_RATE=" + POOL_MARKOV_CHAIN_120_BKF_RATE
				+ ", POOL_CONTRACT_DEF_ROLL_RATE=" + POOL_CONTRACT_DEF_ROLL_RATE + ", POOL_BANKRUPT_ROLL_RATE="
				+ POOL_BANKRUPT_ROLL_RATE + ", POOL_LOSS_CURVE_MULTIPLIER=" + POOL_LOSS_CURVE_MULTIPLIER
				+ ", POOL_LOSS_CURVE_TIME_CONSTANT=" + POOL_LOSS_CURVE_TIME_CONSTANT
				+ ", POOL_TARGET_GROSS_EXPECT_LOSS=" + POOL_TARGET_GROSS_EXPECT_LOSS + ", POOL_CURR_PREPAY_MULTIPLIER="
				+ POOL_CURR_PREPAY_MULTIPLIER + ", POOL_CURR_ASYMPTOTE=" + POOL_CURR_ASYMPTOTE
				+ ", POOL_PEAK_LOSS_MONTH=" + POOL_PEAK_LOSS_MONTH + ", POOL_MAF=" + POOL_MAF + ", POOL_DEFAULT_SPAN="
				+ POOL_DEFAULT_SPAN + ", POOL_RECOVERY_PCT=" + POOL_RECOVERY_PCT + ", POOL_RECOVERY_DELAY="
				+ POOL_RECOVERY_DELAY + ", POOL_COEF_OF_VARIATION=" + POOL_COEF_OF_VARIATION + ", POOL_IS_SWAP="
				+ POOL_IS_SWAP + ", POOL_SWAP_RATE=" + POOL_SWAP_RATE + ", MRAT_LETTER_GRADE_SWAP_CNTRPTY="
				+ MRAT_LETTER_GRADE_SWAP_CNTRPTY + ", POOL_IS_PREPAY_PENALTY=" + POOL_IS_PREPAY_PENALTY
				+ ", POOL_PREPAY_PENALTY_ALLOC_PCT=" + POOL_PREPAY_PENALTY_ALLOC_PCT + ", SWAP_ID=" + SWAP_ID
				+ ", POOL_DELIN_START=" + POOL_DELIN_START + ", POOL_DELIN_END=" + POOL_DELIN_END
				+ ", POOL_PREPAY_PENALTY_YR_DECLINE=" + POOL_PREPAY_PENALTY_YR_DECLINE
				+ ", POOL_PREPAY_PENALTY_LOCKOUT_DT=" + POOL_PREPAY_PENALTY_LOCKOUT_DT
				+ ", POOL_PREPAY_PENALTY_TERM_DTE=" + POOL_PREPAY_PENALTY_TERM_DTE + ", POOL_PREPAY_PENALTY_RATE="
				+ POOL_PREPAY_PENALTY_RATE + ", POOL_SINGLE_MONTH_MORTALITY=" + POOL_SINGLE_MONTH_MORTALITY
				+ ", POOL_ABSNET_START=" + POOL_ABSNET_START + ", POOL_ABSNET_END=" + POOL_ABSNET_END
				+ ", POOL_IS_PREFUNDING=" + POOL_IS_PREFUNDING + ", POOL_PF_INTIAL_AMOUNT=" + POOL_PF_INTIAL_AMOUNT
				+ ", POOL_PF_END_DATE=" + POOL_PF_END_DATE + ", POOL_PF_ESTIMATED_WAC=" + POOL_PF_ESTIMATED_WAC
				+ ", POOL_RELEVANT_LIBOR_MATURITY=" + POOL_RELEVANT_LIBOR_MATURITY + ", POOL_INDEX=" + POOL_INDEX
				+ ", NB_TRANCHES=" + NB_TRANCHES + ", IS_SPDACT=" + IS_SPDACT + ", SPDACT_TARGET_PCT="
				+ SPDACT_TARGET_PCT + ", SPDACT_INITIAL_DEPOSIT=" + SPDACT_INITIAL_DEPOSIT + ", SPDACT_CURR_BALANCE="
				+ SPDACT_CURR_BALANCE + ", POOL_MPSHARE=" + POOL_MPSHARE + ", COMBINED_LTV=" + COMBINED_LTV
				+ ", FIRST_LIENS_PCT=" + FIRST_LIENS_PCT + ", SECOND_LIENS_PCT=" + SECOND_LIENS_PCT
				+ ", FIXED_RATE_PCT=" + FIXED_RATE_PCT + ", OCCUPIED_HOUSES_PCT=" + OCCUPIED_HOUSES_PCT
				+ ", FULL_DOC_PCT=" + FULL_DOC_PCT + ", STATED_INCOME_PCT=" + STATED_INCOME_PCT + ", WAFS=" + WAFS
				+ ", DETACHED_HOUSES_PCT=" + DETACHED_HOUSES_PCT + ", INVEST_PROPERTIES_PCT=" + INVEST_PROPERTIES_PCT
				+ ", NONFULLY_AMTZ_PCT=" + NONFULLY_AMTZ_PCT + ", COLLATERAL_SUB_TYPE=" + COLLATERAL_SUB_TYPE
				+ ", WRITEDOWN_MECHANICS=" + WRITEDOWN_MECHANICS + ", WRITEUP_INTEREST_MECHANICS="
				+ WRITEUP_INTEREST_MECHANICS + ", WRITEUP_PRINCIPAL_MECHANICS=" + WRITEUP_PRINCIPAL_MECHANICS
				+ ", POOL_FLOATING_LOANS_PCT=" + POOL_FLOATING_LOANS_PCT + ", SUBROGATION=" + SUBROGATION
				+ ", SUBROG_MAX_PCT=" + SUBROG_MAX_PCT + ", SUBROG_MAX_PCT_BASE=" + SUBROG_MAX_PCT_BASE
				+ ", SUBROG_REC_PCT=" + SUBROG_REC_PCT + ", PPMT_PENALTY_SCHED_TYP=" + PPMT_PENALTY_SCHED_TYP
				+ ", PPMT_PENALTY_ALLOC_TYP=" + PPMT_PENALTY_ALLOC_TYP + ", NORMAL_MODE=" + NORMAL_MODE
				+ ", SIMPLE_SUBROGATION=" + SIMPLE_SUBROGATION + ", DCM_BYPASS=" + DCM_BYPASS + ", DCM_NF_BEGINNING="
				+ DCM_NF_BEGINNING + ", DCM_NF_END=" + DCM_NF_END + ", BROKER_CPR_ORIGINAL=" + BROKER_CPR_ORIGINAL
				+ "]";
	}

	public ABSPool(BigDecimal pOOL_ID, BigDecimal dEAL_ID, BigDecimal iTYP_ID, String pOOL_CODE, BigDecimal pOOL_WAM,
			BigDecimal pOOL_ORIG_WARM, BigDecimal pOOL_CURR_WARM, BigDecimal pOOL_ORIG_WAC, BigDecimal pOOL_CURR_WAC,
			BigDecimal pOOL_ORIG_BALANCE, BigDecimal pOOL_TERMINAL_VALUE, BigDecimal pOOL_ORIG_LOAN_COUNT,
			BigDecimal pOOL_MARKOV_CHAIN_CURE_RATE, BigDecimal pOOL_MARKOV_CHAIN_60_BKF_RATE,
			BigDecimal pOOL_MARKOV_CHAIN_90_BKF_RATE, BigDecimal pOOL_MARKOV_CHAIN_120_BKF_RATE,
			BigDecimal pOOL_CONTRACT_DEF_ROLL_RATE, BigDecimal pOOL_BANKRUPT_ROLL_RATE,
			BigDecimal pOOL_LOSS_CURVE_MULTIPLIER, BigDecimal pOOL_LOSS_CURVE_TIME_CONSTANT,
			BigDecimal pOOL_TARGET_GROSS_EXPECT_LOSS, BigDecimal pOOL_CURR_PREPAY_MULTIPLIER,
			BigDecimal pOOL_CURR_ASYMPTOTE, BigDecimal pOOL_PEAK_LOSS_MONTH, BigDecimal pOOL_MAF,
			BigDecimal pOOL_DEFAULT_SPAN, BigDecimal pOOL_RECOVERY_PCT, BigDecimal pOOL_RECOVERY_DELAY,
			BigDecimal pOOL_COEF_OF_VARIATION, String pOOL_IS_SWAP, BigDecimal pOOL_SWAP_RATE,
			String mRAT_LETTER_GRADE_SWAP_CNTRPTY, String pOOL_IS_PREPAY_PENALTY,
			BigDecimal pOOL_PREPAY_PENALTY_ALLOC_PCT, BigDecimal sWAP_ID, BigDecimal pOOL_DELIN_START,
			BigDecimal pOOL_DELIN_END, BigDecimal pOOL_PREPAY_PENALTY_YR_DECLINE,
			Timestamp pOOL_PREPAY_PENALTY_LOCKOUT_DT, Timestamp pOOL_PREPAY_PENALTY_TERM_DTE,
			BigDecimal pOOL_PREPAY_PENALTY_RATE, BigDecimal pOOL_SINGLE_MONTH_MORTALITY, BigDecimal pOOL_ABSNET_START,
			BigDecimal pOOL_ABSNET_END, String pOOL_IS_PREFUNDING, BigDecimal pOOL_PF_INTIAL_AMOUNT,
			Timestamp pOOL_PF_END_DATE, BigDecimal pOOL_PF_ESTIMATED_WAC, String pOOL_RELEVANT_LIBOR_MATURITY,
			BigDecimal pOOL_INDEX, BigDecimal nB_TRANCHES, String iS_SPDACT, BigDecimal sPDACT_TARGET_PCT,
			BigDecimal sPDACT_INITIAL_DEPOSIT, BigDecimal sPDACT_CURR_BALANCE, String pOOL_MPSHARE,
			BigDecimal cOMBINED_LTV, BigDecimal fIRST_LIENS_PCT, BigDecimal sECOND_LIENS_PCT, BigDecimal fIXED_RATE_PCT,
			BigDecimal oCCUPIED_HOUSES_PCT, BigDecimal fULL_DOC_PCT, BigDecimal sTATED_INCOME_PCT, BigDecimal wAFS,
			BigDecimal dETACHED_HOUSES_PCT, BigDecimal iNVEST_PROPERTIES_PCT, BigDecimal nONFULLY_AMTZ_PCT,
			String cOLLATERAL_SUB_TYPE, String wRITEDOWN_MECHANICS, String wRITEUP_INTEREST_MECHANICS,
			String wRITEUP_PRINCIPAL_MECHANICS, BigDecimal pOOL_FLOATING_LOANS_PCT, String sUBROGATION,
			BigDecimal sUBROG_MAX_PCT, String sUBROG_MAX_PCT_BASE, BigDecimal sUBROG_REC_PCT,
			BigDecimal pPMT_PENALTY_SCHED_TYP, BigDecimal pPMT_PENALTY_ALLOC_TYP, String nORMAL_MODE,
			String sIMPLE_SUBROGATION, String dCM_BYPASS, BigDecimal dCM_NF_BEGINNING, BigDecimal dCM_NF_END,
			BigDecimal bROKER_CPR_ORIGINAL) {
		super();
		POOL_ID = pOOL_ID;
		DEAL_ID = dEAL_ID;
		ITYP_ID = iTYP_ID;
		POOL_CODE = pOOL_CODE;
		POOL_WAM = pOOL_WAM;
		POOL_ORIG_WARM = pOOL_ORIG_WARM;
		POOL_CURR_WARM = pOOL_CURR_WARM;
		POOL_ORIG_WAC = pOOL_ORIG_WAC;
		POOL_CURR_WAC = pOOL_CURR_WAC;
		POOL_ORIG_BALANCE = pOOL_ORIG_BALANCE;
		POOL_TERMINAL_VALUE = pOOL_TERMINAL_VALUE;
		POOL_ORIG_LOAN_COUNT = pOOL_ORIG_LOAN_COUNT;
		POOL_MARKOV_CHAIN_CURE_RATE = pOOL_MARKOV_CHAIN_CURE_RATE;
		POOL_MARKOV_CHAIN_60_BKF_RATE = pOOL_MARKOV_CHAIN_60_BKF_RATE;
		POOL_MARKOV_CHAIN_90_BKF_RATE = pOOL_MARKOV_CHAIN_90_BKF_RATE;
		POOL_MARKOV_CHAIN_120_BKF_RATE = pOOL_MARKOV_CHAIN_120_BKF_RATE;
		POOL_CONTRACT_DEF_ROLL_RATE = pOOL_CONTRACT_DEF_ROLL_RATE;
		POOL_BANKRUPT_ROLL_RATE = pOOL_BANKRUPT_ROLL_RATE;
		POOL_LOSS_CURVE_MULTIPLIER = pOOL_LOSS_CURVE_MULTIPLIER;
		POOL_LOSS_CURVE_TIME_CONSTANT = pOOL_LOSS_CURVE_TIME_CONSTANT;
		POOL_TARGET_GROSS_EXPECT_LOSS = pOOL_TARGET_GROSS_EXPECT_LOSS;
		POOL_CURR_PREPAY_MULTIPLIER = pOOL_CURR_PREPAY_MULTIPLIER;
		POOL_CURR_ASYMPTOTE = pOOL_CURR_ASYMPTOTE;
		POOL_PEAK_LOSS_MONTH = pOOL_PEAK_LOSS_MONTH;
		POOL_MAF = pOOL_MAF;
		POOL_DEFAULT_SPAN = pOOL_DEFAULT_SPAN;
		POOL_RECOVERY_PCT = pOOL_RECOVERY_PCT;
		POOL_RECOVERY_DELAY = pOOL_RECOVERY_DELAY;
		POOL_COEF_OF_VARIATION = pOOL_COEF_OF_VARIATION;
		POOL_IS_SWAP = pOOL_IS_SWAP;
		POOL_SWAP_RATE = pOOL_SWAP_RATE;
		MRAT_LETTER_GRADE_SWAP_CNTRPTY = mRAT_LETTER_GRADE_SWAP_CNTRPTY;
		POOL_IS_PREPAY_PENALTY = pOOL_IS_PREPAY_PENALTY;
		POOL_PREPAY_PENALTY_ALLOC_PCT = pOOL_PREPAY_PENALTY_ALLOC_PCT;
		SWAP_ID = sWAP_ID;
		POOL_DELIN_START = pOOL_DELIN_START;
		POOL_DELIN_END = pOOL_DELIN_END;
		POOL_PREPAY_PENALTY_YR_DECLINE = pOOL_PREPAY_PENALTY_YR_DECLINE;
		POOL_PREPAY_PENALTY_LOCKOUT_DT = pOOL_PREPAY_PENALTY_LOCKOUT_DT;
		POOL_PREPAY_PENALTY_TERM_DTE = pOOL_PREPAY_PENALTY_TERM_DTE;
		POOL_PREPAY_PENALTY_RATE = pOOL_PREPAY_PENALTY_RATE;
		POOL_SINGLE_MONTH_MORTALITY = pOOL_SINGLE_MONTH_MORTALITY;
		POOL_ABSNET_START = pOOL_ABSNET_START;
		POOL_ABSNET_END = pOOL_ABSNET_END;
		POOL_IS_PREFUNDING = pOOL_IS_PREFUNDING;
		POOL_PF_INTIAL_AMOUNT = pOOL_PF_INTIAL_AMOUNT;
		POOL_PF_END_DATE = pOOL_PF_END_DATE;
		POOL_PF_ESTIMATED_WAC = pOOL_PF_ESTIMATED_WAC;
		POOL_RELEVANT_LIBOR_MATURITY = pOOL_RELEVANT_LIBOR_MATURITY;
		POOL_INDEX = pOOL_INDEX;
		NB_TRANCHES = nB_TRANCHES;
		IS_SPDACT = iS_SPDACT;
		SPDACT_TARGET_PCT = sPDACT_TARGET_PCT;
		SPDACT_INITIAL_DEPOSIT = sPDACT_INITIAL_DEPOSIT;
		SPDACT_CURR_BALANCE = sPDACT_CURR_BALANCE;
		POOL_MPSHARE = pOOL_MPSHARE;
		COMBINED_LTV = cOMBINED_LTV;
		FIRST_LIENS_PCT = fIRST_LIENS_PCT;
		SECOND_LIENS_PCT = sECOND_LIENS_PCT;
		FIXED_RATE_PCT = fIXED_RATE_PCT;
		OCCUPIED_HOUSES_PCT = oCCUPIED_HOUSES_PCT;
		FULL_DOC_PCT = fULL_DOC_PCT;
		STATED_INCOME_PCT = sTATED_INCOME_PCT;
		WAFS = wAFS;
		DETACHED_HOUSES_PCT = dETACHED_HOUSES_PCT;
		INVEST_PROPERTIES_PCT = iNVEST_PROPERTIES_PCT;
		NONFULLY_AMTZ_PCT = nONFULLY_AMTZ_PCT;
		COLLATERAL_SUB_TYPE = cOLLATERAL_SUB_TYPE;
		WRITEDOWN_MECHANICS = wRITEDOWN_MECHANICS;
		WRITEUP_INTEREST_MECHANICS = wRITEUP_INTEREST_MECHANICS;
		WRITEUP_PRINCIPAL_MECHANICS = wRITEUP_PRINCIPAL_MECHANICS;
		POOL_FLOATING_LOANS_PCT = pOOL_FLOATING_LOANS_PCT;
		SUBROGATION = sUBROGATION;
		SUBROG_MAX_PCT = sUBROG_MAX_PCT;
		SUBROG_MAX_PCT_BASE = sUBROG_MAX_PCT_BASE;
		SUBROG_REC_PCT = sUBROG_REC_PCT;
		PPMT_PENALTY_SCHED_TYP = pPMT_PENALTY_SCHED_TYP;
		PPMT_PENALTY_ALLOC_TYP = pPMT_PENALTY_ALLOC_TYP;
		NORMAL_MODE = nORMAL_MODE;
		SIMPLE_SUBROGATION = sIMPLE_SUBROGATION;
		DCM_BYPASS = dCM_BYPASS;
		DCM_NF_BEGINNING = dCM_NF_BEGINNING;
		DCM_NF_END = dCM_NF_END;
		BROKER_CPR_ORIGINAL = bROKER_CPR_ORIGINAL;
	}
	
	public ABSPool() {}
}
